@page "/filmedit/{FilmId:int}"

@using FilmsServices.Services;
@using FilmsServices.Services.Common;
@using FilmsServices.Validators.Common;
@using FilmsServices.ViewModel;

@inject NavigationManager navigation
@inject IJSRuntime jsRuntime;

@inject IFilmService filmService
@inject IService<ActorVM> actorService
@inject IService<ProducerVM> producerService
@inject IService<GenreVM> genreService
@inject IService<CustomPropertyVM> customPropService
@inject IService<CountryVM> countryService


<h3>Редактирование фильма</h3>

<div class="form-group row">
    <div class="col-sm-10">
        <a href="/FilmList">К списку</a>
    </div>
</div>


@if (filmEditContext == null)
{
    <p>Загрузка...</p>
}
else
{
    <div class="toast-container position-fixed p-3 top-0 end-0" id="toastPlacement" style="margin-top: 50px">
        <div id="liveToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Сохранение успешно завершено
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>


    <EditForm EditContext="filmEditContext">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- поля -->
        <div class="row">
            <div class="col-sm-8">
                <div class="form-group row">
                    <label for="Name" class="col-sm-2 col-form-label">Название</label>
                    <div class="col-sm-10">
                        <InputText class="form-control" @bind-Value="film.Name"></InputText>
                    </div>
                    <br/>
                </div>

                <div class="form-group row">
                    <label for="Year" class="col-sm-2 col-form-label">Год производства</label>
                    <div class="col-sm-10">
                        <InputNumber class="form-control" @bind-Value="film.Year"></InputNumber>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="Rating" class="col-sm-2 col-form-label">Рейтинг</label>
                    <div class="col-sm-10">
                        <InputNumber class="form-control" @bind-Value="film.Rating"></InputNumber>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="Slogan" class="col-sm-2 col-form-label">Слоган</label>
                    <div class="col-sm-10">
                        <InputText class="form-control" @bind-Value="film.Slogan"></InputText>
                    </div>
                    <br />
                </div>

                <div class="form-group row">
                    <label for="Description" class="col-sm-2 col-form-label">Описание</label>
                    <div class="col-sm-10">
                        <InputTextArea class="form-control" @bind-Value="film.Description" rows="5"></InputTextArea>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="Poster" class="col-sm-2 col-form-label">Постер</label>
                    <div class="col-sm-10">
                        <InputText class="form-control" @bind-Value="film.Poster"></InputText>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="Link" class="col-sm-2 col-form-label">Ссылка</label>
                    <div class="col-sm-10">
                        <InputText class="form-control" @bind-Value="film.Link"></InputText>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="KinopoiskId" class="col-sm-2 col-form-label">Кинопоиск ID</label>
                    <div class="col-sm-10">
                        <InputText class="form-control" @bind-Value="film.KinopoiskId"></InputText>
                    </div>
                </div>
            </div>

            <div class="offset-1 col-sm-3">
                <img src="@film.Poster" style="width:100%"/>
            </div>
        </div>

        <!-- ссылки -->
        <ListEditor TEntity="CountryVM"
            List="film.Countries"
            Caption="Страны"
            Service="countryService"
            Mappings="countryMapping"
            SearchField="a => a.Name">
        </ListEditor>

        <ListEditor TEntity="ProducerVM"
            List="film.Producers"
            Caption="Создатели"
            Service="producerService"
            Mappings="producerMapping"
            SearchField="a => a.Name">
        </ListEditor>

        <ListEditor 
            TEntity="ActorVM"
            List="film.Actors"
            Caption="В ролях"
            Service="actorService"
            Mappings="actorMapping"
            SearchField="a => a.Name">
        </ListEditor>

        <ListEditor 
            TEntity="GenreVM"
            List="film.Genres"
            Caption="Жанры"
            Service="genreService"
            Mappings="genreMapping"
            SearchField="a => a.Name">
        </ListEditor>

        <!-- не меняем на ListEditor, поскольку value редактируем прямо тут -->
        <div class="row">
            <table class="table table-hover caption-top table-bordered">
                <caption>Допольнительные свойства</caption>
                <thead>
                    <tr>
                        <th>Название</th>
                        <th>Степень</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cp in film.CustomProperties)
                    {
                        <tr>
                            <td>@cp.Name</td>
                            <td>@cp.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



        <div class="row">
            <div class="col">
                <button type="submit" class="btn btn-success" @onclick="Save">Сохранить</button>
            </div>
        </div>

    </EditForm>

}





@code {


    [Parameter]
    public int FilmId { get; set; }

    private FilmVM film = new FilmVM();
    private EditContext filmEditContext;
    private ValidationMessageStore messageStore;

    #region Маппинг для таблиц

    private List<FieldMapping<ActorVM>> actorMapping = new List<FieldMapping<ActorVM>>()
    {
        new FieldMapping<ActorVM>(0, "Имя", a => a.Name)
    };

    private List<FieldMapping<ProducerVM>> producerMapping = new List<FieldMapping<ProducerVM>>()
    {
        new FieldMapping<ProducerVM>(0, "Имя", a => a.Name)
    };

    private List<FieldMapping<CountryVM>> countryMapping = new List<FieldMapping<CountryVM>>()
    {
        new FieldMapping<CountryVM>(0, "Название", a => a.Name)
    };

    private List<FieldMapping<GenreVM>> genreMapping = new List<FieldMapping<GenreVM>>()
    {
        new FieldMapping<GenreVM>(0, "Название", a => a.Name)
    };

    #endregion


    protected override async Task OnInitializedAsync()
    {
        film = await filmService.GetByIdAsync(FilmId);

        filmEditContext = new EditContext(film);
        messageStore = new ValidationMessageStore(filmEditContext);
    }


    protected async Task Save()
    {
        try 
        {
            messageStore.Clear();
            ValidationResult result = await filmService.UpdateAsync(film);

            if (result.Success)
            {
                await jsRuntime.InvokeVoidAsync("showToast", "liveToast");

                filmEditContext.MarkAsUnmodified();
                StateHasChanged();
            }
            else
            {
                foreach (var err in result.Errors)
                    messageStore.Add(new FieldIdentifier(film, err.Field), err.Message);
            }
        }
        catch (Exception ex)
        {
            messageStore.Add(() => film.Name, ex.Message);
        }            
    }


    // TODO: Delete
}
